const express = require('express'); const multer = require('multer'); const path = require('path'); const { exec } = require('child_process'); const fs = require('fs'); const cors = require('cors'); const app = express(); // Railway به صورت خودکار یک پورت به شما می‌دهد، ما باید از آن استفاده کنیم const PORT = process.env.PORT || 3001; app.use(cors()); fs.mkdirSync('./uploads', { recursive: true }); fs.mkdirSync('./processed', { recursive: true }); const storage = multer.diskStorage({ destination: (req, file, cb) => cb(null, './uploads'), filename: (req, file, cb) => cb(null, `${Date.now()}-${Buffer.from(file.originalname, 'latin1').toString('utf8')}`) }); const upload = multer({ storage }); app.post('/upload', upload.single('video'), (req, res) => { if (!req.file) return res.status(400).json({ message: 'No file uploaded.' }); res.json({ fileId: req.file.filename }); }); app.post('/process/:fileId', (req, res) => { const fileId = req.params.fileId; const videoPath = path.join(__dirname, 'uploads', fileId); const audioPath = path.join(__dirname, 'processed', `${fileId}.wav`); if (!fs.existsSync(videoPath)) return res.status(404).json({ message: 'File not found on server.' }); const ffmpegCommand = `ffmpeg -i "${videoPath}" -vn -acodec pcm_s16le -ar 16000 -ac 1 "${audioPath}"`; exec(ffmpegCommand, (error) => { if (error) { console.error(`FFmpeg error: ${error.message}`); return res.status(500).json({ message: 'FFmpeg processing failed.' }); } // Railway یک آدرس عمومی به ما می‌دهد که باید از آن استفاده کنیم const audioFileUrl = `https://${req.get('host')}/processed/${path.basename(audioPath)}`; res.json({ audioFileUrl }); }); }); app.use('/processed', express.static(path.join(__dirname, 'processed'))); app.listen(PORT, () => console.log(`FFmpeg API server running on port ${PORT}`)); 
